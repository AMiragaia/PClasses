// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "12/02/2021 10:26:45"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module DecoderDemo3 (
	f,
	A,
	B,
	C,
	D,
	E1,
	E0);
output 	f;
input 	A;
input 	B;
input 	C;
input 	D;
input 	E1;
input 	E0;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \f~output_o ;
wire \A~input_o ;
wire \C~input_o ;
wire \B~input_o ;
wire \D~input_o ;
wire \inst2~0_combout ;
wire \E1~input_o ;
wire \E0~input_o ;
wire \inst2~1_combout ;


cycloneive_io_obuf \f~output (
	.i(\inst2~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \D~input (
	.i(D),
	.ibar(gnd),
	.o(\D~input_o ));
// synopsys translate_off
defparam \D~input .bus_hold = "false";
defparam \D~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = (\A~input_o  & ((\C~input_o ) # ((\D~input_o )))) # (!\A~input_o  & (\C~input_o  & (\B~input_o )))

	.dataa(\A~input_o ),
	.datab(\C~input_o ),
	.datac(\B~input_o ),
	.datad(\D~input_o ),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'hEAC8;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \E1~input (
	.i(E1),
	.ibar(gnd),
	.o(\E1~input_o ));
// synopsys translate_off
defparam \E1~input .bus_hold = "false";
defparam \E1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E0~input (
	.i(E0),
	.ibar(gnd),
	.o(\E0~input_o ));
// synopsys translate_off
defparam \E0~input .bus_hold = "false";
defparam \E0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst2~1 (
// Equation(s):
// \inst2~1_combout  = (\inst2~0_combout  & (\E1~input_o  & !\E0~input_o ))

	.dataa(\inst2~0_combout ),
	.datab(\E1~input_o ),
	.datac(gnd),
	.datad(\E0~input_o ),
	.cin(gnd),
	.combout(\inst2~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~1 .lut_mask = 16'h0088;
defparam \inst2~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign f = \f~output_o ;

endmodule
