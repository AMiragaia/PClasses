double proc(double *array, double thd, double val, int n)
{
 int i;
 double aux, sum;
 sum = 0.0;
 for (i = 0; i < n; i++) {
	 aux = array[i] + val;
 	if (aux > thd) {
 		array[i] = thd;
 		sum += thd;
 	} else {
		 array[i] = aux;
 	sum += aux;
 	}
 }
 return sum / (double) n;
}

#Pontos a considerar
1- Tipos de estruturas de dados, double, float, int, correspondem a 8 bytes, 4 bytes e 4 bytes respetivamente, os comandos de converter e tambem como usar o coprocessor, para converter essas mesmas estruturas.
Seguimos sempre o procedimento de
mtc1 $fx,$fx
cvt.w.d $f4,$f4 converte $f4 para inteiro double -> int
2- Não esquecer do operação.tipo, ou seja add.d, doubles, add.s,single
3- Usar registos $f so em numeros pares, ter em atenção ao l.tipo e s.tipo , de resto é tudo igual neste tipo de exercicio, o valor $f12 e $f0 podem ser usados como registo de returns