-- implement an 4 bit adder/subtrator using the Adder4 file
library IEEE;
use IEEE.STD_LOGIC_1164.ALL; 
entity AdderSub4 is
port (
    a, b : in STD_LOGIC_VECTOR(4 DOWNTO 0);
    cin : in STD_LOGIC;
    sum : out STD_LOGIC_VECTOR(3 DOWNTO 0);
    c : out STD_LOGIC
);
end AdderSub4;

architecture Behavioral of AdderSub4 is
    signal s_a, s_b, s_s  : STD_LOGIC_VECTOR(4 DOWNTO 0);
begin
    s_a <= a;
    s_b <= b;
    s_s <= (s_a + s_b) when cin = ('0') else (s_a - s_b);
    sum <= std_logic_vector(s_s(3 downto 0));
    c <= s_s(4);
end Behavioral;


architecture structural of addsub4 is
	signal s_b: std_logic_vector(3 downto 0);
begin
	s_b <= b when (sub = '0') else not b;
	adder: entity work.adder4(structural)
	port map (a => a,
				 b => s_b,
				 cin => sub,
				 s => sum,
				 cout => cout);
	-- A subtracao esta em complemento para 2
end structural;

    
    